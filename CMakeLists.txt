cmake_minimum_required(VERSION 3.17)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic -fPIC -march=native")
project(game LANGUAGES CXX)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake/")
set(CMAKE_CURRENT_BINARY_DIR "${CMAKE_SOURCE_DIR}/bin/")

set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_INSTALL_RPATH "./")

set(PROJECT_HEADERS_DIR "${CMAKE_SOURCE_DIR}/include/")
set(PROJECT_SOURCES_DIR "${CMAKE_SOURCE_DIR}/src/")

file(GLOB_RECURSE HEADERS "${PROJECT_HEADERS_DIR}/*.h")
file(GLOB_RECURSE SOURCES "${PROJECT_SOURCES_DIR}/*.cpp")

include_directories(${PROJECT_HEADERS_DIR})

add_executable(${PROJECT_NAME} ${HEADERS} ${SOURCES})

find_package(BearLibTerminal REQUIRED)
include_directories(${BLT_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME} ${BLT_LIBRARY})

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	file(COPY ${BLT_DLL} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
else()
	file(COPY ${BLT_LIBRARY} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
endif()

file(GLOB STRUCTURES "${CMAKE_SOURCE_DIR}/Editor/Structures/*")
file(COPY ${STRUCTURES} DESTINATION "${CMAKE_CURRENT_BINARY_DIR}/Structures/")

# Add linting before compilation
include(CppLint)
ADD_STYLE_CHECK_TARGET(lint ${PROJECT_NAME} ${PROJECT_HEADERS_DIR} ${PROJECT_SOURCES_DIR})
add_dependencies(${PROJECT_NAME} lint)